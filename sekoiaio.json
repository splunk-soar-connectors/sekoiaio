{
    "appid": "78e7ba61-eb65-421f-9bdf-28a6d14a3deb",
    "name": "Sekoia",
    "description": "This app will interact with SEKOIA.IO",
    "type": "information",
    "product_vendor": "SEKOIA.IO",
    "logo": "logo_sekoiaio.svg",
    "logo_dark": "logo_sekoiaio_dark.svg",
    "product_name": "sekoia.io",
    "python_version": "3",
    "product_version_regex": ".*",
    "publisher": "SEKOIA.IO",
    "license": "Copyright (c) 2023 SEKOIA.IO",
    "app_version": "1.0.0",
    "utctime_updated": "2023-10-09T08:07:31.780040Z",
    "package_name": "phantom_sekoiaio",
    "fips_compliant": false,
    "main_module": "sekoiaio_connector.py",
    "min_phantom_version": "6.1.1.211",
    "app_wizard_version": "1.0.0",
    "configuration": {
        "base_url": {
            "description": "The SEKOIA API base url",
            "data_type": "string",
            "required": true,
            "default": "https://api.sekoia.io",
            "order": 0,
            "name": "base_url",
            "id": 0
        },
        "api_key": {
            "description": "The SEKOIA API key",
            "data_type": "password",
            "required": true,
            "order": 1,
            "name": "api_key",
            "id": 1
        },
        "verify_server_cert": {
            "description": "Verify server SSL (Default: true)",
            "data_type": "boolean",
            "default": true,
            "order": 2,
            "name": "verify_server_cert",
            "id": 2
        }
    },
    "actions": [
        {
            "action": "test connectivity",
            "identifier": "test_connectivity",
            "description": "Validate the asset configuration for connectivity using supplied configuration",
            "type": "test",
            "read_only": true,
            "parameters": {},
            "output": [],
            "versions": "EQ(*)"
        },
        {
            "action": "get indicator",
            "identifier": "get_indicator",
            "description": "Get an indicator according to some criteria",
            "type": "investigate",
            "read_only": true,
            "parameters": {
                "value": {
                    "description": "Value of the indicator",
                    "data_type": "string",
                    "order": 0,
                    "name": "value"
                },
                "type": {
                    "description": "Type of the indicator",
                    "data_type": "string",
                    "order": 1,
                    "name": "type"
                }
            },
            "output": [
                {
                    "data_path": "action_result.parameter.value",
                    "data_type": "string",
                    "column_name": "Value",
                    "column_order": 0
                },
                {
                    "data_path": "action_result.parameter.type",
                    "data_type": "string",
                    "column_name": "Type",
                    "column_order": 1
                },
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "column_name": "Status",
                    "column_order": 2
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string"
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric"
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.data",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.summary.num_data",
                    "data_type": "numeric"
                }
            ],
            "render": {
                "type": "table"
            },
            "versions": "EQ(*)"
        },
        {
            "action": "get indicator context",
            "identifier": "get_indicator_context",
            "description": "Get the context of an indicator",
            "type": "investigate",
            "read_only": true,
            "parameters": {
                "value": {
                    "description": "Value of the indicator",
                    "data_type": "string",
                    "order": 0,
                    "name": "value"
                },
                "type": {
                    "description": "Type of the indicator",
                    "data_type": "string",
                    "order": 1,
                    "name": "type"
                }
            },
            "output": [
                {
                    "data_path": "action_result.parameter.value",
                    "data_type": "string",
                    "column_name": "Value",
                    "column_order": 0
                },
                {
                    "data_path": "action_result.parameter.type",
                    "data_type": "string",
                    "column_name": "Type",
                    "column_order": 1
                },
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "column_name": "Status",
                    "column_order": 2
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string"
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric"
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.data",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.summary.num_data",
                    "data_type": "numeric"
                }
            ],
            "render": {
                "type": "table"
            },
            "versions": "EQ(*)"
        },
        {
            "action": "get observable",
            "identifier": "get_observable",
            "description": "Get an observable according to some criteria",
            "type": "investigate",
            "read_only": true,
            "parameters": {
                "value": {
                    "description": "Value of the indicator",
                    "data_type": "string",
                    "order": 0,
                    "name": "value"
                },
                "type": {
                    "description": "Type of the indicator",
                    "data_type": "string",
                    "order": 1,
                    "name": "type"
                },
                "limit": {
                    "description": "Set the limit of items (Default:20)",
                    "data_type": "numeric",
                    "default": 20,
                    "order": 2,
                    "name": "limit"
                }
            },
            "output": [
                {
                    "data_path": "action_result.parameter.value",
                    "data_type": "string",
                    "column_name": "Value",
                    "column_order": 0
                },
                {
                    "data_path": "action_result.parameter.type",
                    "data_type": "string",
                    "column_name": "type",
                    "column_order": 1
                },
                {
                    "data_path": "action_result.parameter.limit",
                    "data_type": "numeric",
                    "column_name": "Limit",
                    "column_order": 2
                },
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "column_name": "Status",
                    "column_order": 3
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string"
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric"
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.data",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.summary.num_data_get_observable",
                    "data_type": "numeric"
                }
            ],
            "render": {
                "type": "table"
            },
            "versions": "EQ(*)"
        }
    ],
    "pip39_dependencies": {
        "wheel": [
            {
                "module": "beautifulsoup4",
                "input_file": "wheels/py3/beautifulsoup4-4.12.2-py3-none-any.whl"
            },
            {
                "module": "soupsieve",
                "input_file": "wheels/py3/soupsieve-2.5-py3-none-any.whl"
            }
        ]
    }
}
